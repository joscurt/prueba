<?php

namespace Techgym\PTFrontendBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * AlumnoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AlumnoRepository extends EntityRepository {
    public function queryOwnedBy($user) {

        $query = $this->createQueryBuilder('u')
                ->from('TechgymPTFrontendBundle:Alumno', 'u')
                ->innerJoin('u.usuario', 'n')
                ->where('n.id = :id')
                ->setParameter('id', $user->getId());

        return $query;
    }

    public function findOwnedBy($user) {
        return $this->queryOwnedBy($user)
                        ->getQuery()
                        ->getResult();
    }
    
    public function findByUsuarioOrderedById($usuario) {
        $query = $this->getEntityManager()->createQuery(
                        "SELECT n FROM TechgymPTFrontendBundle:Alumno n
                          JOIN n.usuario u
                          WHERE  u.username=:username and n.isActive = '1' ORDER BY n.id DESC")
                ->setParameters(array('username' => $usuario->getUsername()));

        return $query->getResult();
    }
public function findByUsuarioTotal($usuario) {
        $query = $this->getEntityManager()->createQuery(
                        "SELECT n FROM TechgymPTFrontendBundle:Alumno n
                          JOIN n.usuario u
                          WHERE  u.username=:username and YEAR(n.creacionalum)= YEAR(CURRENT_DATE()) ORDER BY n.id DESC")
                ->setParameters(array('username' => $usuario->getUsername()));

        return $query->getResult();
    }
    public function findByUsuarioOrderedByIdinac($usuario) {
        $query = $this->getEntityManager()->createQuery(
                        "SELECT n FROM TechgymPTFrontendBundle:Alumno n
                          JOIN n.usuario u
                          WHERE  u.username=:username and n.isActive = '0' ORDER BY n.id DESC")
                ->setParameters(array('username' => $usuario->getUsername()));

        return $query->getResult();
    }
    public function findByEvaSecond($usuario) {
        $query = $this->getEntityManager()->createQuery(
                        "SELECT n FROM TechgymPTFrontendBundle:Evaluacion n
                          JOIN n.alumno u
                          WHERE  u.username=:username ORDER BY n.id DESC LIMIT 1, 1")
                ->setParameters(array('username' => $usuario->getUsername()));

        return $query->getSingleResult();
    }
    public function findByIdinac($usuario) {
        $query = $this->getEntityManager()->createQuery(
                        "SELECT n.id FROM TechgymPTFrontendBundle:Alumno n
                          JOIN n.usuario u
                          WHERE  u.id=:id and n.isActive = '0' ORDER BY n.id DESC")
                ->setParameters(array('id' => $usuario->getId()));

        return $query->getResult();
    }

    public function findByUsuarioOrderedById2($usuario) {
        $query = $this->getEntityManager()->createQuery(
                        "SELECT n FROM TechgymPTFrontendBundle:Alumno n
                          JOIN n.usuario u
                          WHERE  u.username=:username ORDER BY n.id DESC")
                ->setParameters(array('username' => $usuario->getUsername()));

        return $query->getResult();
    }

    public function findByMonthEne($usuario) {

        $query = $this->getEntityManager()->createQuery(
                        "SELECT n FROM TechgymPTFrontendBundle:Alumno n
                          JOIN n.usuario u
                          WHERE  u.username=:username and MONTH(n.creacionalum) = 1 
                          and YEAR(n.creacionalum)= YEAR(CURRENT_DATE()) ORDER BY n.id DESC")
                ->setParameters(array('username' => $usuario->getUsername()));
        return $query->getResult();
    }
 public function findByMonthFeb($usuario) {

        $query = $this->getEntityManager()->createQuery(
                        "SELECT n FROM TechgymPTFrontendBundle:Alumno n
                          JOIN n.usuario u
                          WHERE  u.username=:username and MONTH(n.creacionalum) = 2 
                          and YEAR(n.creacionalum)= YEAR(CURRENT_DATE()) ORDER BY n.id DESC")
                ->setParameters(array('username' => $usuario->getUsername()));
        return $query->getResult();
    }
     public function findByMonthMar($usuario) {

        $query = $this->getEntityManager()->createQuery(
                        "SELECT n FROM TechgymPTFrontendBundle:Alumno n
                          JOIN n.usuario u
                          WHERE  u.username=:username and MONTH(n.creacionalum) = 3 
                          and YEAR(n.creacionalum)= YEAR(CURRENT_DATE()) ORDER BY n.id DESC")
                ->setParameters(array('username' => $usuario->getUsername()));
        return $query->getResult();
    }
     public function findByMonthAbr($usuario) {

        $query = $this->getEntityManager()->createQuery(
                        "SELECT n FROM TechgymPTFrontendBundle:Alumno n
                          JOIN n.usuario u
                          WHERE  u.username=:username and MONTH(n.creacionalum) = 4 
                          and YEAR(n.creacionalum)= YEAR(CURRENT_DATE()) ORDER BY n.id DESC")
                ->setParameters(array('username' => $usuario->getUsername()));
        return $query->getResult();
    }
     public function findByMonthMay($usuario) {

        $query = $this->getEntityManager()->createQuery(
                        "SELECT n FROM TechgymPTFrontendBundle:Alumno n
                          JOIN n.usuario u
                          WHERE  u.username=:username and MONTH(n.creacionalum) = 5 
                          and YEAR(n.creacionalum)= YEAR(CURRENT_DATE()) ORDER BY n.id DESC")
                ->setParameters(array('username' => $usuario->getUsername()));
        return $query->getResult();
    }
     public function findByMonthJun($usuario) {

        $query = $this->getEntityManager()->createQuery(
                        "SELECT n FROM TechgymPTFrontendBundle:Alumno n
                          JOIN n.usuario u
                          WHERE  u.username=:username and MONTH(n.creacionalum) = 6 
                          and YEAR(n.creacionalum)= YEAR(CURRENT_DATE()) ORDER BY n.id DESC")
                ->setParameters(array('username' => $usuario->getUsername()));
        return $query->getResult();
    }
     public function findByMonthJul($usuario) {

        $query = $this->getEntityManager()->createQuery(
                        "SELECT n FROM TechgymPTFrontendBundle:Alumno n
                          JOIN n.usuario u
                          WHERE  u.username=:username and MONTH(n.creacionalum) = 7 
                          and YEAR(n.creacionalum)= YEAR(CURRENT_DATE()) ORDER BY n.id DESC")
                ->setParameters(array('username' => $usuario->getUsername()));
        return $query->getResult();
    }
     public function findByMonthAgo($usuario) {

        $query = $this->getEntityManager()->createQuery(
                        "SELECT n FROM TechgymPTFrontendBundle:Alumno n
                          JOIN n.usuario u
                          WHERE  u.username=:username and MONTH(n.creacionalum) = 8
                          and YEAR(n.creacionalum)= YEAR(CURRENT_DATE()) and n.isActive = '1' ORDER BY n.id DESC")
                ->setParameters(array('username' => $usuario->getUsername()));
        return $query->getResult();
    
     }
     
    public function findByMonthSept($usuario) {

        $query = $this->getEntityManager()->createQuery(
                        "SELECT n FROM TechgymPTFrontendBundle:Alumno n
                          JOIN n.usuario u
                          WHERE  u.username=:username and MONTH(n.creacionalum) = 9 
                          and YEAR(n.creacionalum)= YEAR(CURRENT_DATE()) ORDER BY n.id DESC")
                ->setParameters(array('username' => $usuario->getUsername()));
        return $query->getResult();
    }
     public function findByMonthOct($usuario) {

        $query = $this->getEntityManager()->createQuery(
                        "SELECT n FROM TechgymPTFrontendBundle:Alumno n
                          JOIN n.usuario u
                          WHERE  u.username=:username and MONTH(n.creacionalum) = 10 
                          and YEAR(n.creacionalum)= YEAR(CURRENT_DATE()) ORDER BY n.id DESC")
                ->setParameters(array('username' => $usuario->getUsername()));
        return $query->getResult();
    }
     public function findByMonthNov($usuario) {

        $query = $this->getEntityManager()->createQuery(
                        "SELECT n FROM TechgymPTFrontendBundle:Alumno n
                          JOIN n.usuario u
                          WHERE  u.username=:username and MONTH(n.creacionalum) = 11 
                          and YEAR(n.creacionalum)= YEAR(CURRENT_DATE()) ORDER BY n.id DESC")
                ->setParameters(array('username' => $usuario->getUsername()));
        return $query->getResult();
    }
     public function findByMonthDic($usuario) {

        $query = $this->getEntityManager()->createQuery(
                        "SELECT n FROM TechgymPTFrontendBundle:Alumno n
                          JOIN n.usuario u
                          WHERE  u.username=:username and MONTH(n.creacionalum) = 12 
                          and YEAR(n.creacionalum)= YEAR(CURRENT_DATE()) ORDER BY n.id DESC")
                ->setParameters(array('username' => $usuario->getUsername()));
        return $query->getResult();
    }
    public function findByUsuarioOrderedByIdActual($usuario) {
        $query = $this->getEntityManager()->createQuery(
                        "SELECT n FROM TechgymPTFrontendBundle:Alumno n
                          JOIN n.usuario u
                          WHERE  u.username=:username and YEAR(n.creacionalum)= YEAR(CURRENT_DATE()) and n.isActive = '1' ORDER BY n.id DESC")
                ->setParameters(array('username' => $usuario->getUsername()));

        return $query->getResult();
    }
    public function findByUsuarioOrderedByIdActual2($usuario) {
        $query = $this->getEntityManager()->createQuery(
                        "SELECT n FROM TechgymPTFrontendBundle:Alumno n
                          JOIN n.usuario u
                          WHERE  u.username=:username and YEAR(n.creacionalum)= YEAR(CURRENT_DATE()) and n.isActive = '0' ORDER BY n.id DESC")
                ->setParameters(array('username' => $usuario->getUsername()));

        return $query->getResult();
    }
}
